getgenv().Speed = 1.3
getgenv().Key = Enum.KeyCode.V
getgenv().CameraLockKey = Enum.KeyCode.C
getgenv().CameraLockActive = false
getgenv().Prediction = 0.142  -- Prediction interval for camera lock

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local HRP = character:WaitForChild("HumanoidRootPart", 10)
local speedActive = false
local camera = workspace.CurrentCamera
local lockedPlayer = nil  -- Currently locked player
local rpgtp = CFrame.new(112.43256378173828, -26.750036239624023, -263.3774108886719)
local lmgtp = CFrame.new(-618.670166015625, 23.245738983154297, -297.5761413574219)
local revtp = CFrame.new(-640.4768676757812, 21.7499942779541, -125.49468994140625)
local dbtp = CFrame.new(-1044.3682861328125, 21.7499942779541, -262.5482482910156)
local higharmortp = CFrame.new(-257.03668212890625, 21.799951553344727, -78.68620300292969)
local tactp = CFrame.new(478.3451232910156, 48.070491790771484, -620.615478515625)
local dbcartp = CFrame.new(35.87136459350586, 25.3799991607666, -842.5587768554688)

-- Load UI library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Roblox-UI-Libs/main/1%20Tokyo%20Lib%20(FIXED)/Tokyo%20Lib%20Source.lua"))({
    cheatname = "maddie.skbiidi",
    gamename = "test"
})

library:init()

local Window = library.NewWindow({
    title = "maddie",
    size = UDim2.new(0, 510, 0, 530)
})

-- Controls Tab
local ControlsTab = Window:AddTab("Controls")
local SettingsTab = library:CreateSettingsTab(Window)

-- Speed Section
local ControlSection = ControlsTab:AddSection("Cframe", 1)

-- Speed Slider
ControlSection:AddSlider({
    enabled = true,
    text = "Speed",
    tooltip = "Adjust movement speed",
    flag = "SpeedSlider",
    suffix = "x",
    min = 0.1,
    max = 5,
    increment = 0.1,
    callback = function(value)
        getgenv().Speed = value
    end
}):SetValue(getgenv().Speed)

-- Keybind Setter for Speed Toggle
ControlSection:AddBind({
    enabled = true,
    text = "Toggle Speed Keybind",
    tooltip = "Set a keybind to toggle speed",
    bind = getgenv().Key.Name,
    mode = "toggle",
    flag = "SpeedToggleKey",
    callback = function(newKey)
        getgenv().Key = Enum.KeyCode[newKey.Name]
    end
})

-- Camera Lock Section
local CameraSection = ControlsTab:AddSection("Camera Lock", 1)

CameraSection:AddToggle({
    text = "Enable Camera Lock",
    state = false,
    flag = "CameraLockToggle",
    callback = function(value)
        getgenv().CameraLockActive = value
        toggleCameraLock()
    end
})

-- Camera Lock Keybind Setter
CameraSection:AddBind({
    enabled = true,
    text = "Set Camera Lock Keybind",
    tooltip = "Set a keybind to toggle camera lock",
    bind = getgenv().CameraLockKey.Name,
    mode = "toggle",
    flag = "CameraLockKeybind",
    callback = function(newKey)
        getgenv().CameraLockKey = Enum.KeyCode[newKey.Name]
    end
})

-- Function to find the closest player to the cursor
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, target in pairs(Players:GetPlayers()) do
        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = target.Character.HumanoidRootPart
            local screenPosition, onScreen = camera:WorldToViewportPoint(targetHRP.Position)
            local cursorPosition = UserInputService:GetMouseLocation()
            local distance = (Vector2.new(screenPosition.X, screenPosition.Y) - cursorPosition).Magnitude

            if distance < shortestDistance and onScreen then
                closestPlayer = target
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

-- Function to toggle camera lock on/off
local function toggleCameraLock()
    if getgenv().CameraLockActive then
        lockedPlayer = getClosestPlayer()
        if lockedPlayer then
            library:SendNotification("Locked onto: " .. lockedPlayer.Name, 3)
        else
            library:SendNotification("No player found to lock onto", 3)
        end
    else
        lockedPlayer = nil
        library:SendNotification("Camera lock disabled", 3)
    end
end

-- Update the camera lock to follow the predicted position of the locked player
local function updateCameraLock()
    if getgenv().CameraLockActive and lockedPlayer and lockedPlayer.Character and lockedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetHRP = lockedPlayer.Character.HumanoidRootPart
        local targetVelocity = targetHRP.Velocity * getgenv().Prediction
        local predictedPosition = targetHRP.Position + targetVelocity
        camera.CFrame = CFrame.new(camera.CFrame.Position, predictedPosition)
    end
end

-- Misc Section with Toggles
local MiscSection = ControlsTab:AddSection("Misc", 2)

MiscSection:AddToggle({
    text = "Toggle Option 1",
    state = false,
    flag = "ToggleOption1",
    callback = function(value)
        print("Toggle Option 1: " .. tostring(value))
    end
})

MiscSection:AddToggle({
    text = "Toggle Option 2",
    state = false,
    flag = "ToggleOption2",
    callback = function(value)
        print("Toggle Option 2: " .. tostring(value))
    end
})

local checkKOToggle = false
local koConnection

-- Anti Stomp Functionality
local function startMonitoringKOs()
    if koConnection then
        koConnection:Disconnect()
    end

    koConnection = RunService.RenderStepped:Connect(function()
        if not checkKOToggle then
            return
        end

        local playerEffects = workspace.Players:FindFirstChild(player.Name)
            and workspace.Players[player.Name]:FindFirstChild("BodyEffects")
        local koValue = playerEffects and playerEffects:FindFirstChild("K.O")

        if koValue and koValue.Value then
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                task.wait(0.5)
            end
        end
    end)
end


local StuffSection = ControlsTab:AddSection("Stuff", 3)

MiscSection:AddToggle({
    text = "Anti Stomp",
    state = false,
    flag = "AntiStompToggle",
    callback = function(value)
        checkKOToggle = value

        if checkKOToggle then
            startMonitoringKOs()


            -- Restart monitoring when the character respawns
            player.CharacterAdded:Connect(function()
                task.wait(0.5)
                if checkKOToggle then
                    startMonitoringKOs()
                end
            end)
        else
            if koConnection then
                koConnection:Disconnect()
                koConnection = nil
            end
        end
    end
})

local StuffSection = ControlsTab:AddSection("Stuff", 3)

StuffSection:AddButton({
    enabled = true,
    text = "Detect Mods/Stars",
    tooltip = "antimod",
    confirm = true,
    callback = function()
        local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/XK5NG/XK5NG.github.io/main/Notify"))()
        local Notify = NotifyLibrary.Notify
        local badhuman = {163721789, 15427717, 201454243, 822999, 63794379, 17260230, 28357488, 93101606, 8195210, 89473551, 16917269, 85989579, 1553950697, 476537893, 155627580, 31163456, 7200829, 25717070, 201454243, 15427717, 63794379, 16138978, 60660789, 17260230, 16138978, 1161411094, 9125623, 11319153, 34758833, 194109750, 35616559, 1257271138, 28885841, 23558830, 25717070, 4255947062, 29242182, 2395613299, 3314981799, 3390225662, 2459178, 2846299656, 2967502742, 7001683347, 7312775547, 328566086, 170526279, 99356639, 352087139, 6074834798, 2212830051, 3944434729, 5136267958, 84570351, 542488819}

        local function checkForBadHumans()
            while wait(1) do  
                for _, player in pairs(game.Players:GetPlayers()) do
                    if table.find(badhuman, player.UserId) then
                        Notify({
                            Title = "Mod/Star Detector",
                            Description = player.Name .. " detected.",
                            Duration = 4
                        })
                    end
                end
            end
        end

        checkForBadHumans()
    end
})

-- Button for Dodge Explosives
StuffSection:AddButton({
    enabled = true,
    text = "Dodge Explosives",
    tooltip = "anti rpg/gre",
    confirm = true,
    callback = function()
        local plr = game.Players.LocalPlayer
        local rand = Random.new()
        local detectRadius, teleportRange = 27, 15
        local pos = nil 

        local function isNear(part, char)
            return part and (part.Position - char.PrimaryPart.Position).Magnitude <= detectRadius
        end

        local function teleportSmoothly(char, newPos)
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(newPos)
            end
        end

        local function startTeleporting(char)
            local origPos = char.PrimaryPart.Position

            while true do
                local launcher = workspace:FindFirstChild("Ignored") and workspace.Ignored:FindFirstChild("Model") and workspace.Ignored.Model:FindFirstChild("Launcher")
                local handle = workspace.Ignored and workspace.Ignored:FindFirstChild("Handle")
                
                if (launcher and isNear(launcher, char)) or (handle and isNear(handle, char)) then
                    if not pos then
                        pos = char.PrimaryPart.Position
                    end
                    local newPos = char.PrimaryPart.Position + Vector3.new(rand:NextNumber(-teleportRange, teleportRange), 15, rand:NextNumber(-teleportRange, teleportRange))
                    teleportSmoothly(char, newPos)
                else
                    if pos then
                        teleportSmoothly(char, pos)
                        pos = nil
                    end
                end

                wait(0.05)
            end
        end

        local function onCharacterAdded(char)
            wait(1)
            startTeleporting(char)
        end

        plr.CharacterAdded:Connect(onCharacterAdded)

        if plr.Character then
            onCharacterAdded(plr.Character)
        end
    end
})

-- Button to Enable Chat Spy
StuffSection:AddButton({
    enabled = true,
    text = "Enable Chat Spy",
    tooltip = "Load chat spy script",
    confirm = true,
    callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/phowg0001/ChatSpy/refs/heads/main/Universal"))()
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "Infinite yield",
    tooltip = "yes",
    confirm = false,
    callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "lmg tp",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = lmgtp
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "db tp",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dbtp
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "rev tp",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = revtp
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "rev tp",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = higharmortp
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "db car",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dbcartp
    end
})

StuffSection:AddButton({
    enabled = true,
    text = "tac",
    tooltip = "yes",
    confirm = false,
    callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = tactp
    end
})

-- Speed Control and Camera Lock Handlers
local function onMove()
    local moveDirection = Vector3.new(0, 0, 0)
    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
        moveDirection = moveDirection + (camera.CFrame.LookVector * Vector3.new(1, 0, 1)).unit
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
        moveDirection = moveDirection - (camera.CFrame.LookVector * Vector3.new(1, 0, 1)).unit
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
        moveDirection = moveDirection - (camera.CFrame.RightVector * Vector3.new(1, 0, 1)).unit
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
        moveDirection = moveDirection + (camera.CFrame.RightVector * Vector3.new(1, 0, 1)).unit
    end
    if HRP then
        HRP.CFrame = HRP.CFrame + (moveDirection * getgenv().Speed)
    end
end

local function toggleSpeed(input)
    if input.KeyCode == getgenv().Key then
        speedActive = not speedActive
        if speedActive then
            RunService:BindToRenderStep("SpeedControl", Enum.RenderPriority.Character.Value, onMove)
        else
            RunService:UnbindFromRenderStep("SpeedControl")
        end
    end
end

-- Camera Lock Toggle Bind
local function onCameraToggle(input)
    if input.KeyCode == getgenv().CameraLockKey then
        getgenv().CameraLockActive = not getgenv().CameraLockActive
        toggleCameraLock()
    end
end

local function initializeSpeedControl()
    HRP = character:WaitForChild("HumanoidRootPart", 10)
    if speedActive then
        RunService:BindToRenderStep("SpeedControl", Enum.RenderPriority.Character.Value, onMove)
    end
end

initializeSpeedControl()

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    initializeSpeedControl()
end)

UserInputService.InputBegan:Connect(toggleSpeed)
UserInputService.InputBegan:Connect(onCameraToggle)
RunService.RenderStepped:Connect(updateCameraLock)

library:SendNotification("Script Loaded", 6)
